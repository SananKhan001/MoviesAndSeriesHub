version: '3.1'

services:

  mysql_db:
    image: mysql
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"

  elasticsearch:
    image: elasticsearch:7.17.22
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    deploy:
      resources:
        limits:
          memory: 1GB
    environment:
      - discovery.type=single-node

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: kafka_zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka_server
    ports:
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    depends_on:
      - zookeeper

  redis-stack:
    image: redis/redis-stack-server:latest
    container_name: redis_server
    restart: always
    environment:
      - REDIS_ARGS=--requirepass root
    ports:
      - "6379:6379"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
